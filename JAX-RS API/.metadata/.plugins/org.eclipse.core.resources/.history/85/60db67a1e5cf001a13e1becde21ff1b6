package com.api.salesdata;

import java.util.List;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;
import javax.ws.rs.core.UriInfo;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Path("/data")
public class SalesRepResource {
	
	@Path("/getReps")
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public List<SalesRepModel> GetAllData() {
		return SalesRepository.GetSalesRepData();
	}
	
	@Path("/getReps/{id}")
	@GET
	@Consumes(MediaType.TEXT_PLAIN)
	public SalesRepModel GetSalesRep(String id) {
		int salesRepId = Integer.parseInt(id);
		return SalesRepository.GetSalesRep(salesRepId);
	}
	
	@Path("/create")
	@JsonIgnoreProperties
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	public Response CreateRep(SalesRepModel salesRepModel, @Context UriInfo uriInfo) {
		System.out.println(salesRepModel.getSalesRepName());
//		int generatedKey = SalesRepository.CreateNewSalesRep(salesRepModel);
//		
//		UriBuilder uriBuilder = uriInfo.getAbsolutePathBuilder();
//		uriBuilder.path(Integer.toString(generatedKey));
		
//		return Response.created(uriBuilder.build()).build();
		return Response.created(null).build();
	}
}
